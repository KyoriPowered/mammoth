plugins {
  alias libs.plugins.errorprone
  alias libs.plugins.spotless
  alias libs.plugins.indra
  alias libs.plugins.indra.checkstyle
  alias libs.plugins.indra.licenserSpotless
  alias libs.plugins.indra.sonatype
}

group = "net.kyori"
version = "1.3.1-SNAPSHOT"
description = "Helpful API for writing Gradle plugins"

indraSonatype {
  useAlternateSonatypeOSSHost("s01")
}

dependencies {
  compileOnlyApi libs.jetbrainsAnnotations
  implementation gradleApi()
  
  testImplementation platform(libs.junit.bom)
  testImplementation libs.junit.api
  testRuntimeOnly libs.junit.engine
}

tasks.withType(Test).configureEach {
  if (!name.contains("Java8")) {
    jvmArgs(["--add-opens=java.base/java.lang=ALL-UNNAMED"]) // for ProjectBuilder tests
  }
}

allprojects {
  apply plugin: "net.kyori.indra"
  apply plugin: "net.kyori.indra.licenser.spotless"
  apply plugin: "net.kyori.indra.publishing"
  apply plugin: "net.kyori.indra.checkstyle"
  apply plugin: "net.ltgt.errorprone"
  
  dependencies {
    checkstyle(libs.stylecheck)
    errorprone(libs.errorprone)
  }

  spotless {
    ratchetFrom 'origin/main'
    java {
      endWithNewline()
      indentWithSpaces(2)
      importOrderFile rootProject.file('.spotless/kyori.importorder')
      formatAnnotations()
      removeUnusedImports()
    }
  }

  indra {
    github("KyoriPowered", "mammoth") {
      ci true
      publishing true
    }
    mitLicense()
    checkstyle(libs.versions.checkstyle.get())

    configurePublications {
      pom {
        organization {
          name = "KyoriPowered"
          url = "https://kyori.net"
        }

        developers {
          developer {
            id = "kashike"
            timezone = "America/Vancouver"
          }
          developer {
            id = "zml"
            email = "zml at kyori [.] net"
            timezone = "America/Vancouver"
          }
        }
      }
    }
  }
}
